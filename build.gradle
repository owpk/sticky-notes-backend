import nu.studer.gradle.jooq.JooqEdition

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.20'
    id 'org.liquibase.gradle' version '2.1.1'
    id 'nu.studer.jooq' version '8.2.1'
}

group = 'owpk'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.16.1'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql:42.3.8'
    liquibaseRuntime group: 'org.yaml', name: 'snakeyaml', version: '1.30'

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.8'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    jooqGenerator 'org.postgresql:postgresql:42.3.8'
    jooqGenerator 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1' // This line was added
}

tasks.named('test') {
    useJUnitPlatform()
}

def jdbcUrl = System.env.SN_DB_JDBC
def dbUserName = System.env.SN_DB_USERNAME
def dbPassword = System.env.SN_DB_PASSWORD

liquibase {
    activities {
        main {
            classpath "${project.projectDir}/src/main/resources/liquibase"
            changeLogFile "master.yaml"
            url jdbcUrl
            username dbUserName
            password dbPassword
        }
    }
}

jooq {
    version = '3.18.4'
    edition = JooqEdition.OSS

    configurations {
        main {

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.TRACE
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = jdbcUrl
                    user = dbUserName
                    password = dbPassword
                    properties {
                        property {
                            key = 'ssl'
                            value = 'false'
                        }
                    }
                }

                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        forcedTypes {
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'JSONB?'
                            }
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }

                    generate {
                        relations = true
                        deprecated = false
                        records = true
                        immutablePojos = false
                        daos = true
                        fluentSetters = true
                    }

                    target {
                        packageName = project.group
                        directory = 'build/generated-src/jooq/main'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}
